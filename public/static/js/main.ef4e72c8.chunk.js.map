{"version":3,"sources":["components/constants/constants.js","components/task_template/task_template.js","components/task_template/index.js","components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/loading/index.js","components/loading/loading.js","services/dev-service/dev-service.js","services/app-service.js","components/buttons/but_play.js","components/create_task/create_task.js","components/buttons/but_pause.js","components/buttons/but_save.js","components/buttons/but_close.js","components/task/index.js","components/task/task.js","components/work-area/work-area.js","components/work-area/index.js","components/report/index.js","components/report/report.js","components/authorization/index.js","components/authorization/authorization.js","components/main/index.js","components/main/main.js","index.js"],"names":["ItemTypes","TaskTemplate","deleteTemplate","props","deleteHandler","template_index","template","id","template_Style","this","active","connectDragSource","className","isDragging","type","data-dismiss","onClick","title","React","Component","DragSource","monitor","getItem","beginDrag","component","connect","dragSource","Header","state","navDate","changeDate","date","setState","exitHandles","exit","fio","customInput","selected","onChange","Footer","startDate","Date","endDate","changeStartDate","chandeReportDate","changeEndDate","report","createReport","closeHanler","closeReport","reportStat","Loading","DevService","domain","req","getDataFromURL","url","inputdata","a","auth","token","ans","headers","fetch","method","credentials","body","JSON","stringify","then","result","json","data","catch","error","status","deleteTemplateById","logout","authorization","registration","saveTaskTemplate","getTemplates","getTowns","reportTasksDays","dates","getTasks","curDate","createNewTask","task","actionsFromTask","taskinfo","AppService","appservice","templateId","ButPlay","play","e","buttonEvent","width","height","fill","viewBox","d","ButPause","pause","ButSave","save","ButClose","close","Task","pad","num","slice","changeTownHandler","towns","find","item","town_title","target","value","changeTown","index","changeTaskDesc","changeDesc","clickButton","action","buttonsHandler","taskId","description","town_id","diffsec","duration","Math","trunc","main_but","close_but","task_duration","DurationToStr","task_style","selectValue","colorForSelect","time_start","placeholder","disabled","map","isfilial","isCurDate","WorkArea","connectDropTarget","isOver","itemTitle","tasks","DropTarget","hover","drop","newTask","dropTarget","isOverCurrent","shallow","canDrop","itemType","getItemType","Report","toDate","fromdate","dateparts","split","scope","rows","template_title","datestart","Authorization","name","pass","pass1","login","isFIOCorrect","isNameCorrect","isPassCorrect","checkData","correct","trim","length","pair","btoa","regHandler","userpass","closeHandler","closeMessage","authHandler","turnReg","inputNameHandler","inputFIOHandler","inputPassHandler","confirmPassHandler","registrationOk","authResult","fioStyle","nameStyle","passStyle","role","aria-live","aria-atomic","aria-label","aria-hidden","autoComplete","Main","task_templates","loaded_template","loaded_tasks","loaded_towns","reportDateStart","reportDateEnd","reports","loaded_report","isAutorizated","userID","isAll","showAllHandle","res","localStorage","removeItem","console","log","registrate","authorizate","setItem","loadMainContent","dateStart","dateEnd","getFullYear","getMonth","getDate","newDate","startOrend","townId","newTasks","changeDescription","descValue","curdatestrFull","getHours","getMinutes","getSeconds","loaded_templates","existsActiveTask","array","deleteTemplateHander","new_templates","new_item","newTemplateHandler","push","newTaskHandler","curdate","sort","b","undefined","mainContent","DndProvider","backend","HTML5Backend","checked","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef4e72c8.chunk.js","sourcesContent":["export const ItemTypes = {\r\n    TASK: 'task_template',\r\n    PATH: 'http://192.168.1.10:3001'\r\n  }","import React from 'react'\r\nimport { ItemTypes } from '../constants/constants'\r\nimport { DragSource } from 'react-dnd'\r\nimport './task_template.css'\r\n\r\nconst TemplateSource = {\r\n\r\n    isDragging(props, monitor) {\r\n\r\n        return monitor.getItem().id === props.template_index\r\n    },\r\n\r\n    beginDrag(props, monitor, component) {\r\n\r\n        const item = {\r\n            title: props.template.title,\r\n            id: props.template.id\r\n        }\r\n        return item\r\n    },\r\n\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n        connectDragSource: connect.dragSource(),\r\n        isDragging: monitor.isDragging()\r\n    }\r\n}\r\n\r\nclass TaskTemplate extends React.Component {\r\n\r\n    deleteTemplate = () => {\r\n        this.props.deleteHandler(this.props.template_index, this.props.template.id)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        let template_Style = 'alert alert-dismissible alert-success'\r\n        if (this.props.template.active === 0)\r\n            template_Style = 'alert alert-dismissible alert-danger'\r\n        return this.props.connectDragSource(\r\n\r\n            <div className={template_Style} isDragging={this.props.isDragging}>\r\n                <button type='button' className='close' data-dismiss='alert' onClick={this.deleteTemplate}>&times;</button>\r\n                <strong className='unselectable'><small>{this.props.template.title}</small></strong>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default DragSource(ItemTypes.TASK, TemplateSource, collect)(TaskTemplate)","import TaskTemplate from './task_template'\r\nexport default TaskTemplate","import Header from './header'\r\nexport default Header","import React from 'react'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport './header.css'\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    state = {\r\n        navDate: this.props.navDate\r\n    }\r\n\r\n    changeDate = (date) => {\r\n        this.setState({ navDate: date })\r\n        this.props.changeDate(date)\r\n    }\r\n\r\n    exitHandles = () => {\r\n        this.props.exit()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <nav className='navbar navbar-expand-lg navbar-dark bg-primary header'>\r\n                <div className='navbar_wrap'>\r\n                    <div className='navbar-brand'> {this.props.fio} </div>\r\n                    <div className='navDate'>\r\n                        <DatePicker customInput={<input type='text' className='form-control'></input>} selected={this.state.navDate} onChange={this.changeDate} />\r\n                    </div>\r\n                    <div>\r\n                        <button type='button' className='btn btn-warning btn-sm' onClick={this.exitHandles} >Выход</button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import Footer from './footer'\r\nexport default Footer","import React from 'react'\r\nimport './footer.css'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    state = {\r\n        startDate: new Date(),\r\n        endDate: new Date()\r\n    }\r\n\r\n    changeStartDate = (date) => {\r\n        this.setState({ startDate: date })\r\n        this.props.chandeReportDate(date, 'start')\r\n        //this.props.changeDate(date)\r\n    }\r\n\r\n    changeEndDate = (date) => {\r\n        this.setState({ endDate: date })\r\n        this.props.chandeReportDate(date, 'end')\r\n        //this.props.changeDate(date)\r\n    }\r\n\r\n    report = () => {\r\n        this.props.createReport()\r\n    }\r\n\r\n    closeHanler = () => {\r\n        this.props.closeReport()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <nav className='navbar navbar-expand-lg navbar-dark bg-primary footer'>\r\n                <div className='navDate'>\r\n                    <div className='margin_mod'>\r\n                        <h6 className='date-title text-white'>Отчет с:</h6>\r\n                    </div>\r\n                    <div className='margin_mod'>\r\n                        <DatePicker customInput={<input type='text' className='form-control'></input>} selected={this.props.startDate} onChange={this.changeStartDate} />\r\n                    </div>\r\n                    <div className='margin_mod'>\r\n                        <h6 className='date-title text-white'>по:</h6>\r\n                    </div>\r\n                    <div className='margin_mod'>\r\n                        <DatePicker customInput={<input type='text' className='form-control'></input>} selected={this.props.endDate} onChange={this.changeEndDate} />\r\n                    </div>\r\n                    <div className='margin_mod'>\r\n                        <button type=\"button\" className='btn btn-secondary' onClick={this.report}>Сформировать</button>\r\n                    </div>\r\n                    {this.props.reportStat &&\r\n                        <div className='margin_mod'>\r\n                            <button type=\"button\" className='btn btn-warning' onClick={this.closeHanler}>Закрыть</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import Loading from './loading'\r\nexport default Loading","import React from 'react'\r\nimport './loading.css'\r\n\r\nexport default class Loading extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className = 'load jumbotron' > Loading... </div>\r\n        )\r\n\r\n    }\r\n\r\n}","import {ItemTypes} from '../../components/constants/constants'\r\nexport default class DevService {\r\n\r\n    domain = (req) => `${ItemTypes.PATH}/${req}`\r\n\r\n    getDataFromURL = async (url, inputdata , auth = false, token = '') => {\r\n\r\n        let ans = {}\r\n        let headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        if (auth) {\r\n            headers = {\r\n                'authorization': 'Basic ' + token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        await fetch(url, {\r\n            method: 'post',\r\n            credentials: 'include',\r\n            headers: headers,\r\n            body: JSON.stringify(inputdata)\r\n        })\r\n            .then(result => result.json())\r\n            .then(data => {\r\n                ans = data\r\n            })\r\n            .catch(function (error) {\r\n                const badRes = {\r\n                    status: -1,\r\n                    result: error\r\n                }\r\n                ans = badRes\r\n            });\r\n\r\n        return ans\r\n    };\r\n\r\n    deleteTemplateById = async (data) => {\r\n\r\n        return await this.getDataFromURL(this.domain('deleteTemplate'),data) \r\n\r\n    }\r\n\r\n    logout = async (data) => {\r\n\r\n        return await this.getDataFromURL(this.domain('logout')) \r\n\r\n    }\r\n\r\n    authorization = async (data) => {\r\n\r\n        return await this.getDataFromURL(this.domain('login'), {}, true, data)\r\n\r\n    }\r\n\r\n    registration = async (data) => {\r\n\r\n        return await this.getDataFromURL(this.domain('registration'), data)\r\n\r\n    }\r\n\r\n    saveTaskTemplate = async (template) => {\r\n\r\n        return await this.getDataFromURL(this.domain('createTemplate'), template)\r\n\r\n    }\r\n\r\n    getTemplates = async () => {\r\n\r\n        return await this.getDataFromURL(this.domain('getAllTemplates'))\r\n\r\n    }\r\n\r\n    getTowns = async () => {\r\n\r\n        return await this.getDataFromURL(this.domain('getAllTowns'))\r\n\r\n    }\r\n\r\n    reportTasksDays = async (dates) => {\r\n\r\n        return await this.getDataFromURL(this.domain('reportTasksDays'), dates)\r\n\r\n    }\r\n\r\n    getTasks = async (curDate) => {\r\n\r\n        return await this.getDataFromURL(this.domain('getAllTasks'), curDate)\r\n\r\n    }\r\n\r\n    createNewTask = async (task) => {\r\n\r\n        return await this.getDataFromURL(this.domain('createNewTask'), task)\r\n\r\n    }\r\n\r\n    actionsFromTask = async (taskinfo) => {\r\n\r\n        return await this.getDataFromURL(this.domain('controllTask'), taskinfo)\r\n      \r\n    }\r\n\r\n}\r\n\r\n","import DevService from './dev-service/dev-service.js'\r\nexport default class AppService {\r\n\r\n    constructor(type){\r\n        \r\n        if(type === 'dev'){\r\n            if (!(this.appservice instanceof DevService)){\r\n                this.appservice = new DevService()\r\n            }   \r\n            return this \r\n        }\r\n\r\n    }\r\n\r\n   \r\n\r\n    saveTaskTemplate(template) {\r\n        return this.appservice.saveTaskTemplate(template)\r\n    }\r\n\r\n    getTemplates() {\r\n        return this.appservice.getTemplates()\r\n    }\r\n\r\n    getTasks(curDate) {\r\n        return this.appservice.getTasks(curDate)\r\n    }\r\n\r\n    getTowns() {\r\n        return this.appservice.getTowns()\r\n    }\r\n\r\n    deleteTemplateById(templateId) {\r\n        return this.appservice.deleteTemplateById(templateId)\r\n    }\r\n\r\n    createNewTask(task) {\r\n        return this.appservice.createNewTask(task)\r\n    }\r\n\r\n    actionsFromTask(taskinfo) {\r\n        return this.appservice.actionsFromTask(taskinfo)\r\n    }\r\n\r\n    reportTasksDays(dates) {\r\n        return this.appservice.reportTasksDays(dates)\r\n    }\r\n\r\n    authorization(data) {\r\n        return this.appservice.authorization(data)\r\n    }\r\n\r\n    registration(data) {\r\n        return this.appservice.registration(data)\r\n    }\r\n\r\n    logout() {\r\n        return this.appservice.logout()\r\n    }\r\n\r\n}","import React from 'react'\r\nimport './but.css'\r\n\r\nexport default class ButPlay extends React.Component {\r\n\r\n    play = (e) => {\r\n        this.props.buttonEvent('play')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button type='button' className='btn btn-outline-success' onClick = {this.play}>\r\n                <svg width='32' height='32' fill='currentColor' className='bi bi-play-btn' viewBox='0 0 16 16'>\r\n                    <path d='M6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z' />\r\n                    <path d='M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm15 0a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z' />\r\n                </svg>\r\n            </button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AppService from '../../services/app-service'\r\nimport './create_task.css'\r\n\r\nexport default class CreateTask extends React.Component {\r\n\r\n\r\n    state = {\r\n        template: {\r\n            id: 0,\r\n            title: ''\r\n        }\r\n    }\r\n\r\n    prepareTemplate = (id) => {\r\n        const newobj = {}\r\n        newobj.id = id\r\n        newobj.title = this.state.template.title\r\n        return newobj\r\n    }\r\n\r\n    changeTitle = (e) => {\r\n        this.setState({\r\n            template: {\r\n                id: 0,\r\n                title: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    newTemplate = () => {\r\n        new AppService('dev').saveTaskTemplate(this.state.template).then((res) => {\r\n            if(res.status === 0){\r\n                this.props.createHandler(this.prepareTemplate(res.result))\r\n                this.setState({\r\n                    template: {\r\n                        id: 0,\r\n                        title: ''\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='form-group create_task__mod'>\r\n                <input type=\"text\" className='form-control' placeholder=\"Новая задача...\" id='inputDefault' value={this.state.template.title} onChange={this.changeTitle}></input>\r\n                <button type=\"button\" className='btn btn-primary btn__paddings' onClick={this.newTemplate}>Добавить</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport './but.css'\r\n\r\nexport default class ButPause extends React.Component {\r\n\r\n\r\n    pause = () => {\r\n        this.props.buttonEvent('pause')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button type='button' className='btn btn-outline-warning' onClick = {this.pause} >\r\n                <svg width=\"32\" height=\"32\" fill=\"currentColor\" className='bi bi-pause-btn' viewBox=\"0 0 16 16\">\r\n                    <path d=\"M6.25 5C5.56 5 5 5.56 5 6.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C7.5 5.56 6.94 5 6.25 5zm3.5 0c-.69 0-1.25.56-1.25 1.25v3.5a1.25 1.25 0 1 0 2.5 0v-3.5C11 5.56 10.44 5 9.75 5z\" />\r\n                    <path d=\"M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4zm15 0a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z\" />\r\n                </svg>\r\n            </button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport './but.css'\r\n\r\nexport default class ButSave extends React.Component {\r\n\r\n\r\n    save = () => {\r\n        this.props.buttonEvent('save')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button type='button' className='btn btn-outline-primary' onClick = {this.save} >\r\n                <svg width='32' height='32' fill='currentColor' className='bi bi-hdd' viewBox='0 0 16 16'>\r\n                    <path d='M4.5 11a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1zM3 10.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0z' />\r\n                    <path d='M16 11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V9.51c0-.418.105-.83.305-1.197l2.472-4.531A1.5 1.5 0 0 1 4.094 3h7.812a1.5 1.5 0 0 1 1.317.782l2.472 4.53c.2.368.305.78.305 1.198V11zM3.655 4.26L1.592 8.043C1.724 8.014 1.86 8 2 8h12c.14 0 .276.014.408.042L12.345 4.26a.5.5 0 0 0-.439-.26H4.094a.5.5 0 0 0-.44.26zM1 10v1a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-1a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1z' />\r\n                </svg>\r\n            </button>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\nimport './but.css'\r\n\r\nexport default class ButClose extends React.Component {\r\n\r\n    close = () => {\r\n        this.props.buttonEvent('close')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button type='button' className='btn btn-outline-warning' onClick = {this.close}>\r\n                <svg width=\"32\" height=\"32\" fill=\"currentColor\" className='bi bi-x-circle' viewBox=\"0 0 16 16\">\r\n                    <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\" />\r\n                    <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n                </svg>\r\n            </button>\r\n        )\r\n    }\r\n\r\n}","import Task from './task'\r\nexport default Task","import React from 'react'\r\nimport ButPlay from '../buttons/but_play'\r\nimport ButPause from '../buttons/but_pause'\r\nimport ButSave from '../buttons/but_save'\r\nimport ButClose from '../buttons/but_close'\r\nimport './task.css'\r\n\r\nexport default class Task extends React.Component {\r\n\r\n\r\n    pad = function (num) { return ('00' + num).slice(-2) }\r\n\r\n    DurationToStr(diffsec) {\r\n\r\n        let duration = '';\r\n        duration = this.pad(Math.trunc(diffsec / 3600)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 3600)) * 3600;\r\n        duration = duration + this.pad(Math.trunc(diffsec / 60)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 60)) * 60;\r\n        return duration + this.pad(diffsec);\r\n    }\r\n\r\n    changeTownHandler = (e) => {\r\n        this.props.towns.find((item) => {\r\n            if (item.town_title === e.target.value) this.props.changeTown(item.id, this.props.index, item.town_title)\r\n        })\r\n    }\r\n\r\n    changeTaskDesc = (e) => {\r\n        this.props.changeDesc(e.target.value, this.props.index)\r\n    }\r\n\r\n    clickButton = (action) => {\r\n        this.props.buttonsHandler(\r\n            {\r\n                action: action,\r\n                id: this.props.task.taskId,\r\n                description: this.props.task.description,\r\n                town_id: this.props.task.town_id,\r\n                index: this.props.index\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        let main_but = ''\r\n        let close_but = <ButClose buttonEvent={this.clickButton} />\r\n        let task_duration = this.DurationToStr(this.props.task.duration)\r\n        if (this.props.task.status === 1) {\r\n            main_but = <ButPlay buttonEvent={this.clickButton} />\r\n        }\r\n        if (this.props.task.status === 2) {\r\n            main_but = <ButPause buttonEvent={this.clickButton} />\r\n            task_duration = ''\r\n        }\r\n        if (this.props.task.status === 0) {\r\n            close_but = ''\r\n        }\r\n\r\n        let task_style = 'task-item'\r\n        if (this.props.index % 2 === 0)\r\n            task_style = 'task-item table-active'\r\n\r\n        //console.log(`${this.props.task.town_id}  ${this.props.task.town_title}`)\r\n\r\n        let selectValue = this.props.task.town_title || 'Не выбран участок...'\r\n\r\n        let colorForSelect = 'form-control select__mod'\r\n        if (this.props.task.town_id === -1) colorForSelect = 'form-control select__mod not__choose'\r\n\r\n        return (\r\n\r\n            <div className={task_style} >\r\n\r\n                <div className='task-title' ><small>{this.props.task.title}</small></div>\r\n\r\n                <div className='task-time' >{this.props.task.time_start}</div>\r\n                {this.props.task.status === 2 ?\r\n                    <div className='task-time table-success' >в работе</div> :\r\n                    <div className='task-time ' >{task_duration}</div>\r\n                }\r\n                <div className='task-description'>\r\n                    <input className='form-control input__mod' placeholder='Описание...' value={this.props.task.description} onChange={this.changeTaskDesc}></input>\r\n                </div>\r\n                <div className='task-place'>\r\n\r\n                    <select className={colorForSelect} value={selectValue} onChange={this.changeTownHandler}>\r\n                        <option disabled selected>Не выбран участок...</option>\r\n                        {\r\n                            this.props.towns.map((item, index) => {\r\n                                return (item.isfilial === 0 ? <option key={index}>{item.town_title}</option> : <option key={index} className='isfilial' disabled>{item.town_title}</option>)\r\n                            })\r\n                        }\r\n                    </select>\r\n\r\n                </div>\r\n                <div className='task-buttons' >\r\n\r\n                    {this.props.isCurDate && main_but}\r\n                    <ButSave buttonEvent={this.clickButton} />\r\n                    {this.props.isCurDate && close_but}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport Task from '../task'\r\nimport { ItemTypes } from '../constants/constants'\r\nimport { DropTarget } from 'react-dnd'\r\nimport './work-area.css'\r\n\r\nconst TaskTarget = {\r\n\r\n\r\n\r\n    hover(props, monitor, component) {\r\n\r\n    },\r\n\r\n    drop(props, monitor, component) {\r\n        props.newTask(monitor.getItem())\r\n    }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n    return {\r\n\r\n        connectDropTarget: connect.dropTarget(),\r\n        isOver: monitor.isOver(),\r\n        isOverCurrent: monitor.isOver({ shallow: true }),\r\n        canDrop: monitor.canDrop(),\r\n        itemType: monitor.getItemType(),\r\n        itemTitle: monitor.getItem()\r\n    }\r\n}\r\n\r\nclass WorkArea extends React.Component {\r\n    render() {\r\n\r\n        return this.props.connectDropTarget(\r\n            <div className='work-task'>\r\n                {this.props.isOver && <div className='table-warning empty'><strong>{this.props.itemTitle.title}</strong></div>}\r\n\r\n                {this.props.tasks.map((item, index) => {\r\n                    return ( <Task task={item} key={index} index={index} towns={this.props.towns} buttonsHandler={this.props.buttonsHandler} changeDesc = {this.props.changeDesc} changeTown={this.props.changeTown} isCurDate = {this.props.isCurDate}/>)\r\n                })\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DropTarget(ItemTypes.TASK, TaskTarget, collect)(WorkArea)","import WorkArea from './work-area'\r\nexport default WorkArea","import Report from './report'\r\nexport default Report","import React from 'react'\r\nimport './report.css'\r\n\r\nexport default class Report extends React.Component {\r\n\r\n\r\n    pad = function (num) { return ('00' + num).slice(-2) }\r\n\r\n    toDate = (fromdate) => {\r\n        const dateparts = fromdate.split(' ', 1)[0].split('-')\r\n        //console.log(dateparts)\r\n        return `${dateparts[2]}.${dateparts[1]}.${dateparts[0]}`\r\n    }\r\n\r\n    DurationToStr(diffsec) {\r\n\r\n        let duration = '';\r\n        duration = this.pad(Math.trunc(diffsec / 3600)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 3600)) * 3600;\r\n        duration = duration + this.pad(Math.trunc(diffsec / 60)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 60)) * 60;\r\n        return duration + this.pad(diffsec);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className='report'>\r\n                <div className='report-table'>\r\n                    <table className='table table-hover'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope='col'>Наименование работы</th>\r\n                                <th scope='col'>Комментарий</th>\r\n                                <th scope='col'>Место оказания услуги</th>\r\n                                <th scope='col'>Дата</th>\r\n                                <th scope='col'>Длительность</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.rows.map((item, index) => {\r\n                                return (\r\n                                    <tr>\r\n                                        <td>{item.template_title}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>{item.town_title}</td>\r\n                                        <td>{this.toDate(item.datestart)}</td>\r\n                                        <td>{this.DurationToStr(item.duration)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import Authorization from './authorization'\r\nexport default Authorization","import React from 'react'\r\nimport './authorization.css'\r\n\r\nexport default class Authorization extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        pass: '',\r\n        fio: '',\r\n        pass1: '',\r\n        login: true,\r\n        isFIOCorrect: true,\r\n        isNameCorrect: true,\r\n        isPassCorrect: true\r\n    }\r\n\r\n    checkData = () => {\r\n        const { fio, name, pass, pass1 } = this.state\r\n        let correct = true\r\n        if (fio.trim().length < 8) {\r\n            correct = false\r\n            this.setState({ isFIOCorrect: false })\r\n        }\r\n\r\n        if (name.trim().length < 5) {\r\n            correct = false\r\n            this.setState({ isNameCorrect: false })\r\n        }\r\n\r\n        if (pass.trim().length < 8 || pass !== pass1) {\r\n            correct = false\r\n            this.setState({ isPassCorrect: false })\r\n        }\r\n\r\n        if (correct) {\r\n            this.setState(\r\n                {\r\n                    isFIOCorrect: true,\r\n                    isNameCorrect: true,\r\n                    isPassCorrect: true\r\n                }\r\n            )\r\n        }\r\n\r\n        return correct\r\n    }\r\n\r\n    registration = () => {\r\n        if (this.checkData()) {\r\n            let pair = ''\r\n            try {\r\n                pair = btoa(`${this.state.name}:${this.state.pass}`)\r\n            }\r\n            catch {\r\n                this.setState(\r\n                    {\r\n                        isNameCorrect: false,\r\n                        isPassCorrect: false\r\n                    }\r\n                )\r\n                return\r\n            }\r\n            if (this.props.regHandler({ fio: this.state.fio, userpass: pair })) {\r\n                this.setState({\r\n                    name: '',\r\n                    pass: '',\r\n                    fio: '',\r\n                    pass1: '',\r\n                    login: true,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    closeHandler = () => {\r\n        this.props.closeMessage()\r\n        if (!this.state.login) this.setState({\r\n            isFIOCorrect: true,\r\n            isNameCorrect: true,\r\n            isPassCorrect: true,\r\n            login: true,\r\n            name: '',\r\n            pass: '',\r\n            fio: '',\r\n            pass1: '',\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        let pair = ''\r\n            try {\r\n                pair = btoa(`${this.state.name}:${this.state.pass}`)\r\n            }\r\n            catch {\r\n                this.setState(\r\n                    {\r\n                        isNameCorrect: false,\r\n                        isPassCorrect: false\r\n                    }\r\n                )\r\n                return\r\n            }\r\n        this.props.authHandler(pair)\r\n    }\r\n\r\n    turnReg = () => {\r\n        this.setState({\r\n            name: '',\r\n            pass: '',\r\n            fio: '',\r\n            pass1: '',\r\n            login: false\r\n        })\r\n    }\r\n\r\n    inputNameHandler = (e) => {\r\n        //const reg = /^\\w+$/i\r\n        //if (reg.test(e.target.value))\r\n            this.setState({ name: e.target.value })\r\n    }\r\n\r\n    inputFIOHandler = (e) => {\r\n        this.setState({ fio: e.target.value })\r\n    }\r\n\r\n    inputPassHandler = (e) => {\r\n        //const reg = /^\\w+$/i\r\n        //if (reg.test(e.target.value))\r\n            this.setState({ pass: e.target.value })\r\n    }\r\n\r\n    confirmPassHandler = (e) => {\r\n        this.setState({ pass1: e.target.value })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name, pass, login, fio, pass1, isFIOCorrect, isPassCorrect, isNameCorrect } = this.state\r\n        const { registrationOk, authResult } = this.props\r\n\r\n        let fioStyle = 'form-control'\r\n        if (!isFIOCorrect) fioStyle = 'form-control is-invalid'\r\n        let nameStyle = 'form-control'\r\n        if (!isNameCorrect) nameStyle = 'form-control is-invalid'\r\n        let passStyle = 'form-control'\r\n        if (!isPassCorrect) passStyle = 'form-control is-invalid'\r\n        return (\r\n\r\n            <div className='toast show toast__mod' role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n                <div className='toast-header'>\r\n                    <strong className='mr-auto'>Вход\\регистрация</strong>\r\n                    <button type=\"button\" className='ml-2 mb-1 close' data-dismiss=\"toast\" aria-label=\"Close\" onClick={this.closeHandler}>\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div className='toast-body'>\r\n                    {!login && !registrationOk &&\r\n                        <div className='form-group has-danger form__mod'>\r\n                            <input type='text' value={fio} className={fioStyle} id='inputValid' onChange={this.inputFIOHandler} autoComplete='off' placeholder='ФИО' />\r\n                        </div>\r\n                    }\r\n                    {!registrationOk &&\r\n                        <div className='form-group has-danger form__mod'>\r\n                            <input type='text' value={name} className={nameStyle} id='inputValid' onChange={this.inputNameHandler} autoComplete='off' placeholder='Имя пользователя' />\r\n                        </div>\r\n                    }\r\n                    {!registrationOk &&\r\n                        <div className='form-group has-danger form__mod'>\r\n                            <input type='password' value={pass} className={passStyle} id='exampleInputPassword1' onChange={this.inputPassHandler} autoComplete='off' placeholder='Пароль' />\r\n\r\n                        </div>\r\n                    }\r\n                    {!login && !registrationOk &&\r\n                        <div className='form-group has-danger form__mod'>\r\n                            <input type='password' value={pass1} className={passStyle} id='exampleInputPassword1' onChange={this.confirmPassHandler} autoComplete='off' placeholder='Пароль еще раз' />\r\n\r\n                        </div>\r\n                    }\r\n                    {login && !registrationOk &&\r\n                        <div className='but_wrap'>\r\n\r\n                            <button type='button' className='btn btn-primary btn-sm enter' onClick={this.login} >Вход</button>\r\n                            <button type='button' className='btn btn-primary btn-sm reg' onClick={this.turnReg} >Регистрация</button>\r\n                        </div>\r\n                    }\r\n                    {!login && !registrationOk &&\r\n                        <div className='but_wrap'>\r\n\r\n                            <button type='button' className='btn btn-primary btn-sm enter' onClick={this.registration} >Отправить</button>\r\n\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !authResult && login &&\r\n                        <div className=\"alert alert-dismissible alert-danger message__mod\">\r\n\r\n                            <strong>Неверный логин или пароль</strong>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        registrationOk &&\r\n                        <div className=\"alert alert-dismissible alert-success message__mod\">\r\n\r\n                            <strong>Регистрация выполнена!</strong> Сообщите администартору ваше ФИО для активации.\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import Main from './main'\r\nexport default Main","import React from 'react'\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend'\r\nimport TaskTemplate from '../task_template'\r\nimport Header from '../header'\r\nimport Footer from '../footer'\r\nimport Loading from '../loading'\r\nimport CreateTask from '../create_task'\r\nimport WorkArea from '../work-area'\r\nimport AppService from '../../services/app-service'\r\nimport Report from '../report'\r\nimport Authorization from '../authorization'\r\nimport '../../styles/bootstrap.min.css'\r\nimport './main.css'\r\n\r\nexport default class Main extends React.Component {\r\n\r\n\r\n    state = {\r\n        task_templates: [],\r\n        tasks: [],\r\n        towns: [],\r\n        loaded_template: false,\r\n        loaded_tasks: false,\r\n        loaded_towns: false,\r\n        navDate: new Date(),\r\n        reportDateStart: new Date(),\r\n        reportDateEnd: new Date(),\r\n        reports: [],\r\n        loaded_report: false,\r\n        isAutorizated: true,\r\n        registrationOk: false,\r\n        userID: '',\r\n        authResult: true,\r\n        isAll: false\r\n    }\r\n\r\n    pad = function (num) { return ('00' + num).slice(-2) }\r\n\r\n    showAllHandle = () => {\r\n        this.setState({ isAll: !this.state.isAll })\r\n    }\r\n\r\n    closeReport = () => {\r\n        this.setState({ loaded_report: false })\r\n    }\r\n\r\n    exit = () => {\r\n        //console.log('exit')\r\n        new AppService('dev').logout().then((res) => {\r\n            //console.log(res)\r\n            if (res.status === 0) {\r\n                this.setState({\r\n                    isAutorizated: false\r\n                })\r\n                localStorage.removeItem('fio')\r\n            }\r\n            else {\r\n                console.log(res.status)\r\n            }\r\n        })\r\n    }\r\n\r\n    closeMessage = () => {\r\n        this.setState({ registrationOk: false })\r\n    }\r\n\r\n    registrate = (data) => {\r\n        //console.log(data)\r\n        new AppService('dev').registration(data).then((res) => {\r\n            if (res.status === 0) {\r\n                //console.log(res)\r\n                this.setState({ registrationOk: true })\r\n                return true\r\n            }\r\n            else {\r\n                console.log(res.result)\r\n            }\r\n            //this.setState({ isAutorizated: true })\r\n            //this.loadMainContent()\r\n        })\r\n    }\r\n\r\n    authorizate = (data) => {\r\n\r\n        this.setState({ authResult: true })\r\n        new AppService('dev').authorization(data).then((res) => {\r\n            if (res.status === 0) {\r\n                this.setState({\r\n                    isAutorizated: true,\r\n                    userID: res.result\r\n                })\r\n                localStorage.setItem('fio', res.result)\r\n                this.loadMainContent()\r\n            }\r\n            else {\r\n                //console.log(res.result)\r\n                this.setState({ authResult: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    createReport = () => {\r\n        //console.log(`report for ${this.state.reportDateStart} - ${this.state.reportDateEnd}`)\r\n        const dateStart = this.state.reportDateStart\r\n        const dateEnd = this.state.reportDateEnd\r\n        const dates = {\r\n            reportDateStart: `${dateStart.getFullYear()}-${this.pad(dateStart.getMonth() + 1)}-${this.pad(dateStart.getDate())} 00:00:00`,\r\n            reportDateEnd: `${dateEnd.getFullYear()}-${this.pad(dateEnd.getMonth() + 1)}-${this.pad(dateEnd.getDate())} 23:59:59`\r\n        }\r\n        new AppService('dev').reportTasksDays(dates).then((res) => {\r\n            //console.log(res)\r\n            if (res.status === 0) {\r\n                this.setState({\r\n                    reports: res.result,\r\n                    loaded_report: true\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    chandeReportDate = (newDate, startOrend) => {\r\n        if (startOrend === 'start') this.setState({ reportDateStart: newDate })\r\n        if (startOrend === 'end') this.setState({ reportDateEnd: newDate })\r\n    }\r\n\r\n    changeTown = (townId, index, town_title) => {\r\n        //console.log(townId, index)\r\n        const newTasks = [...this.state.tasks]\r\n        newTasks[index].town_id = townId\r\n        newTasks[index].town_title = town_title\r\n        this.setState({ tasks: newTasks })\r\n    }\r\n\r\n    changeDescription = (descValue, index) => {\r\n        //console.log(`index = ${index} desc = ${descValue}`)\r\n        const newTasks = [...this.state.tasks]\r\n        newTasks[index].description = descValue\r\n        this.setState({ tasks: newTasks })\r\n    }\r\n\r\n    DurationToStr(diffsec) {\r\n\r\n        var duration = '';\r\n        duration = this.pad(Math.trunc(diffsec / 3600)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 3600)) * 3600;\r\n        duration = duration + this.pad(Math.trunc(diffsec / 60)) + ':';\r\n        diffsec = diffsec - (Math.trunc(diffsec / 60)) * 60;\r\n        return duration + this.pad(diffsec);\r\n    }\r\n\r\n    loadMainContent = () => {\r\n        const { navDate, isAutorizated } = this.state\r\n        const curdatestrFull = `${navDate.getFullYear()}-${this.pad(navDate.getMonth() + 1)}-${this.pad(navDate.getDate())} ${this.pad(navDate.getHours())}:${this.pad(navDate.getMinutes())}:${this.pad(navDate.getSeconds())}`;\r\n        if (isAutorizated) {\r\n            new AppService('dev').getTemplates().then((res) => {\r\n                if (res.status === 0) {\r\n                    this.setState({\r\n                        task_templates: res.result,\r\n                        loaded_templates: true\r\n                    })\r\n                }\r\n                else if (res.status === -2) {\r\n                    this.setState({ isAutorizated: false })\r\n                }\r\n            })\r\n\r\n            new AppService('dev').getTasks({ curDate: curdatestrFull }).then((res) => {\r\n                if (res.status === 0) {\r\n                    this.setState({\r\n                        tasks: res.result,\r\n                        loaded_tasks: true\r\n                    })\r\n                }\r\n                else if (res.status === -2) {\r\n                    this.setState({ isAutorizated: false })\r\n                }\r\n            })\r\n\r\n            new AppService('dev').getTowns().then((res) => {\r\n                if (res.status === 0) {\r\n                    this.setState({\r\n                        towns: res.result,\r\n                        loaded_towns: true\r\n                    })\r\n                }\r\n                else if (res.status === -2) {\r\n                    this.setState({ isAutorizated: false })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('fio') !== undefined) {\r\n            this.setState({ userID: localStorage.getItem('fio') })\r\n        }\r\n        this.loadMainContent()\r\n\r\n    }\r\n\r\n    existsActiveTask = (array) => {\r\n        if (array.length > 0) {\r\n            if (array[0].status === 2) return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    deleteTemplateHander = (index, id) => {\r\n        let active = this.state.task_templates[index].active === 0 ? 1 : 0\r\n        new AppService('dev').deleteTemplateById({ id: id, active: active }).then((res) => {\r\n            if (res.status === 0) {\r\n                const new_templates = [...this.state.task_templates]\r\n                console.log(this.state.task_templates)\r\n                const new_item = {\r\n                    id: new_templates[index].id,\r\n                    title: new_templates[index].title,\r\n                    active: active\r\n                }\r\n                new_templates[index] = new_item\r\n                /*if (!this.state.isAll)\r\n                    new_templates.splice(index, 1)*/\r\n                this.setState({ task_templates: new_templates })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    newTemplateHandler = (template) => {\r\n        const new_templates = [...this.state.task_templates]\r\n        new_templates.push(template)\r\n        this.setState({ task_templates: new_templates })\r\n    }\r\n\r\n    newTaskHandler = (newTask) => {\r\n        const curdate = new Date()\r\n        const curdatestrFull = `${curdate.getFullYear()}-${this.pad(curdate.getMonth() + 1)}-${this.pad(curdate.getDate())} ${this.pad(curdate.getHours())}:${this.pad(curdate.getMinutes())}:${this.pad(curdate.getSeconds())}`;\r\n        new AppService('dev').createNewTask({ id: newTask.id, datestart: curdatestrFull }).then((res) => {\r\n            newTask.time_start = `${this.pad(curdate.getHours())}:${this.pad(curdate.getMinutes())}:${this.pad(curdate.getSeconds())}`\r\n            newTask.status = 2\r\n            newTask.taskId = res.result\r\n            newTask.description = ''\r\n            newTask.town_id = -1\r\n            newTask.town_title = null\r\n            const newTasks = [...this.state.tasks]\r\n            if (this.existsActiveTask(newTasks)) {\r\n                newTasks[0].status = 1\r\n                newTasks[0].duration = res.duration\r\n\r\n            }\r\n            newTasks.push(newTask)\r\n            this.setState({ tasks: newTasks.sort((a, b) => b.status - a.status) })\r\n        })\r\n\r\n    }\r\n\r\n    buttonsHandler = (item) => {\r\n        const newTasks = [...this.state.tasks]\r\n        const curdate = new Date()\r\n        const curdatestrFull = `${curdate.getFullYear()}-${this.pad(curdate.getMonth() + 1)}-${this.pad(curdate.getDate())} ${this.pad(curdate.getHours())}:${this.pad(curdate.getMinutes())}:${this.pad(curdate.getSeconds())}`;\r\n        switch (item.action) {\r\n            case 'pause':\r\n                new AppService('dev').actionsFromTask({ id: item.id, date: curdatestrFull, action: 'pause' }).then((res) => {\r\n                    newTasks[item.index].status = 1\r\n                    newTasks[item.index].duration = res.duration\r\n                    this.setState({ tasks: newTasks })\r\n                })\r\n\r\n                break\r\n            case 'play':\r\n                new AppService('dev').actionsFromTask({ id: item.id, date: curdatestrFull, action: 'play' }).then((res) => {\r\n                    if (newTasks[0].status === 2) {\r\n                        newTasks[0].status = 1\r\n                        newTasks[0].duration = res.duration\r\n                    }\r\n                    newTasks[item.index].status = 2\r\n                    newTasks.sort((a, b) => b.status - a.status)\r\n                    this.setState({ tasks: newTasks })\r\n                })\r\n\r\n                break\r\n            case 'close':\r\n                new AppService('dev').actionsFromTask({ id: item.id, date: curdatestrFull, action: 'close' }).then((res) => {\r\n                    newTasks[item.index].status = 0\r\n                    newTasks[item.index].duration = res.duration\r\n                    newTasks.sort((a, b) => b.status - a.status)\r\n                    this.setState({ tasks: newTasks })\r\n                })\r\n                break\r\n\r\n            case 'save':\r\n                new AppService('dev').actionsFromTask({ id: item.id, description: item.description, town_id: item.town_id, action: 'save' }).then((res) => {\r\n                    if (res.status !== 0) console.log(res.result)\r\n                    //console.log(res)\r\n                    //newTasks[item.index].town_id = item.town_id\r\n                    //newTasks[item.index].description = item.description\r\n                    //newTasks.sort((a, b) => b.status - a.status)\r\n                    //this.setState({ tasks: newTasks })\r\n                })\r\n                break\r\n            default: break\r\n        }\r\n\r\n    }\r\n\r\n    changeDate = (date) => {\r\n        const curdatestrFull = `${date.getFullYear()}-${this.pad(date.getMonth() + 1)}-${this.pad(date.getDate())} ${this.pad(date.getHours())}:${this.pad(date.getMinutes())}:${this.pad(date.getSeconds())}`;\r\n        new AppService('dev').getTasks({ curDate: curdatestrFull }).then((res) => {\r\n            //console.log(res)\r\n            if (res.status === 0) {\r\n                this.setState({\r\n                    navDate: date,\r\n                    tasks: res.result,\r\n                    loaded_report: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { task_templates, loaded_templates, loaded_tasks, navDate, towns, loaded_towns, loaded_report, reports, reportDateStart, reportDateEnd, isAutorizated, registrationOk, authResult, isAll } = this.state\r\n        const isCurDate = (navDate.getFullYear() === new Date().getFullYear() && navDate.getMonth() === new Date().getMonth() && navDate.getDate() === new Date().getDate())\r\n        let mainContent = <Loading />\r\n        if (!loaded_report && loaded_templates && loaded_tasks && loaded_towns)\r\n            mainContent = <DndProvider backend={HTML5Backend}>\r\n                <div className='main'>\r\n                    <WorkArea tasks={this.state.tasks} towns={towns} newTask={this.newTaskHandler} buttonsHandler={this.buttonsHandler} changeDesc={this.changeDescription} changeTown={this.changeTown} isCurDate={isCurDate} />\r\n                    <div className='new-task'>\r\n                        {/*\r\n                            <CreateTask createHandler={this.newTemplateHandler} />\r\n                            */\r\n                        }\r\n                        <div className='form-group'>\r\n                            <div className='custom-control custom-switch'>\r\n                                <input type='checkbox' className='custom-control-input' id='customSwitch1' checked={isAll} onChange={this.showAllHandle} />\r\n                                <label className='custom-control-label' htmlFor='customSwitch1'>Показать все</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className='template-list'>\r\n                            {isCurDate &&\r\n                                task_templates.map((item, index) => {\r\n                                    if ((!isAll && item.active === 1) || isAll)\r\n                                        return (<TaskTemplate key={index} template={item} template_index={index} deleteHandler={this.deleteTemplateHander} />)\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DndProvider>\r\n\r\n        if (loaded_report)\r\n            mainContent = <Report rows={reports} />\r\n\r\n        return (\r\n            <div className='wrapper'>\r\n                {!isAutorizated && <Authorization authHandler={this.authorizate} registrationOk={registrationOk} regHandler={this.registrate} closeMessage={this.closeMessage} authResult={authResult} />}\r\n                {isAutorizated && <Header navDate={this.state.navDate} fio={this.state.userID} changeDate={this.changeDate} exit={this.exit} />}\r\n                {isAutorizated && mainContent}\r\n                {isAutorizated && <Footer chandeReportDate={this.chandeReportDate} startDate={reportDateStart} endDate={reportDateEnd} createReport={this.createReport} closeReport={this.closeReport} reportStat={loaded_report} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/main'\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}